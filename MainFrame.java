/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatclientv5.chat;

import chatclientv5.communicate.Sander;
import chatclientv5.login.WarmingDialog;
import chatclientv5.util.UiUtil;
import java.util.HashMap;
import javax.swing.DefaultListModel;

/**
 *
 * @author yusij
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     *
     */
    static HashMap<String, Boolean> chatFrameOpen = new HashMap<>();
    static Sander sander;
    static String user;

    public MainFrame(String username) {
        initComponents();
        myinit(username);
        user = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        addFriendsMenu = new javax.swing.JMenu();
        addGroupMenu = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("好友列表（单击进行聊天）：");

        jLabel2.setText("群组列表（单击进行聊天）：");

        friendList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        friendList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(friendList);

        groupList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        groupList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(groupList);

        addFriendsMenu.setText("添加好友");
        addFriendsMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFriendsMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(addFriendsMenu);

        addGroupMenu.setText("添加群组");
        addGroupMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addGroupMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(addGroupMenu);

        jMenu1.setText("刷新");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        exitMenu.setText("退出系统");
        exitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMenuMouseClicked(evt);
            }
        });
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(exitMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(0, 29, Short.MAX_VALUE))
                                        .addComponent(jScrollPane2))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void exitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitMenuMouseClicked

    private void friendListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendListMouseClicked
        String friend = friendList.getSelectedValue();
        if (friend.equalsIgnoreCase("")) {
            return;
        }
        if (!chatFrameOpen.containsKey("friends:" + friend)) {
            chatFrameOpen.put("friends:" + friend, true);
            new FriendChatFrame(friend);
        } else if (!chatFrameOpen.get("friends:" + friend)) {
            chatFrameOpen.replace("friends:" + friend, true);
            new FriendChatFrame(friend);
        }
    }//GEN-LAST:event_friendListMouseClicked

    private void groupListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupListMouseClicked
        String group = groupList.getSelectedValue();
        if (group.equalsIgnoreCase("")) {
            return;
        }
        if (!chatFrameOpen.containsKey("groups:" + group)) {
            chatFrameOpen.put("groups:" + group, true);
            new GroupChatFrame(group);
        } else if (!chatFrameOpen.get("groups:" + group)) {
            chatFrameOpen.replace("groups:" + group, true);
            new GroupChatFrame(group);
        }
    }//GEN-LAST:event_groupListMouseClicked

    private void addFriendsMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFriendsMenuMouseClicked
        new AddDialog(this, true, true);
    }//GEN-LAST:event_addFriendsMenuMouseClicked

    private void addGroupMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addGroupMenuMouseClicked
        new AddDialog(this, true, false);
    }//GEN-LAST:event_addGroupMenuMouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        freshFriends();
        freshGroups();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void myinit(String username) {
        UiUtil.setCenter(this);

        this.setTitle(username);
        this.setResizable(false);
        this.setAlwaysOnTop(true);
        sander = new Sander(username);
        new Thread(sander).start();
        if (sander.write(username).equalsIgnoreCase("ok")) {
            this.setVisible(true);
            freshFriends();
            freshGroups();
        } else {
            //服务器错误
            new WarmingDialog(this, true, false);
        }
    }

    void freshFriends() {
        //发送refresh请求,返回结果第一行为标志
        String[] friends = sander.write("FreshFriendsList").split("\n");
        //赋值给好友列表
        DefaultListModel dlm = new DefaultListModel();
        for (int i = 1; i < friends.length; i++) {
            dlm.addElement(friends[i]);
        }
        if (friends.length < 2) {
            dlm.addElement("");
        }
        friendList.setModel(dlm);
    }

    void freshGroups() {
        //发送refresh请求,返回结果第一行为标志
        String[] friends = sander.write("FreshGroupsList").split("\n");
        //赋值给列表
        DefaultListModel dlm = new DefaultListModel();
        for (int i = 1; i < friends.length; i++) {
            dlm.addElement(friends[i]);
        }
        if (friends.length < 2) {
            dlm.addElement("");
        }
        groupList.setModel(dlm);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addFriendsMenu;
    private javax.swing.JMenu addGroupMenu;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JList<String> friendList;
    private javax.swing.JList<String> groupList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
